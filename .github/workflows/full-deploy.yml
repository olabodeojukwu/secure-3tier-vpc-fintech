name: Terraform + Flask Auto-Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
        run: terraform apply -auto-approve tfplan

      - name: Save Terraform Outputs
        id: tf_outputs
        working-directory: ./terraform
        run: |
          echo "EC2_PUBLIC_IPS=$(terraform output -raw app_public_ips)" >> $GITHUB_ENV
          echo "ALB_DNS=$(terraform output -raw alb_dns)" >> $GITHUB_ENV
          echo "RDS_ENDPOINT=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV

  deploy_flask:
    name: Deploy Flask App to EC2
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy Flask to All EC2s
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_PUBLIC_IPS }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            for ip in $EC2_PUBLIC_IPS; do
              echo "Deploying to $ip..."
              ssh -o StrictHostKeyChecking=no ubuntu@$ip bash <<'EOF'
                cd ~/fintech
                git pull origin main
                [ -d venv ] || python3 -m venv venv
                source venv/bin/activate
                pip install -r requirements.txt
                sudo systemctl restart fintech
              EOF
            done


